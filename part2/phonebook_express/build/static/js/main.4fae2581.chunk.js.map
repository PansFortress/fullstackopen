{"version":3,"sources":["services/phones.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","delete","Filter","props","value","newFilter","onChange","handleChange","PersonForm","handleSubmit","nameInput","onNameChange","numberInput","onNumberChange","onSubmit","type","Person","person","handleClick","name","number","onClick","Notification","className","message","App","useState","persons","setPersons","newName","setName","newNumber","setNumber","setFilter","errorMessage","setErrorMessage","useEffect","phoneService","initialPhones","event","target","console","log","newPerson","preventDefault","find","returnedPhone","concat","map","toLowerCase","includes","key","filter","p","catch","error","handlePersonClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4fae2581.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = '/api/persons';\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nexport default {getAll, create, update, remove}","import React, { useState, useEffect } from 'react'\nimport phoneService from './services/phones'\nimport './index.css'\n\nconst Filter = props => {\n  const text = 'filter for names with '\n  return (\n    <div>\n      {text} \n      <input value={props.newFilter} \n             onChange={props.handleChange} />\n    </div>\n\n  )\n}\n\nconst PersonForm = props => {\n  const {handleSubmit, nameInput, onNameChange, numberInput, onNumberChange} = props;\n  return (\n    <form onSubmit={handleSubmit}>\n        <div>\n          name: <input value={nameInput} onChange={onNameChange} />\n        </div>\n        <div>number: <input value={numberInput} onChange={onNumberChange}/></div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n  )\n}\n\nconst Person = props => {\n  const person = props.person;\n  const handleClick = props.handleClick;\n\n  return(\n    <li>\n      {person.name} {person.number} \n      <button onClick={handleClick}>Test</button>\n    </li>\n  )\n}\n\nconst Notification = props => {\n  return (\n    <div className=\"error\">\n      {props.message}\n    </div>\n  )\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setName] = useState('')\n  const [newNumber, setNumber] = useState('')\n  const [newFilter, setFilter] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n\n  const effect = () => {\n    phoneService\n    .getAll()\n    .then(initialPhones => {\n      setPersons(initialPhones)\n    })\n  }\n  \n  useEffect(effect, []);\n\n  const handleNameChange = event => {\n    setName(event.target.value);\n  }\n\n  const handleNumberChange = event => {\n    setNumber(event.target.value);\n  }\n\n  const handleFilter = event => {\n    setFilter(event.target.value)\n    console.log(\"Hello\");\n  }\n\n  const handlePersonClick = person => {\n    phoneService\n    .remove(person.id)\n    .then(setPersons(persons.filter(p => p.id !== person.id )))\n    .catch(error => {\n      setErrorMessage(`${person.name} was already removed`)\n    })\n  }\n\n  \n\n  const addPerson = event => {\n    const newPerson = {\n      name: newName,\n      number: newNumber,\n    }\n    \n    event.preventDefault();\n    \n    // Destructure person to only get the name from each object to search on\n    if(persons.find(({name}) => name === newName)){\n      setErrorMessage (`${newName} is already in the phonebook`)\n      setName('');\n      setNumber('');\n      return;\n    }\n\n    phoneService\n      .create(newPerson)\n      .then(returnedPhone => {\n        setPersons(persons.concat(returnedPhone))\n        setErrorMessage(`${newPerson.name} was added to the phonebook`)\n      });\n    setName('');\n    setNumber('');\n  }\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Filter value={newFilter} handleChange={handleFilter}/>\n      <Notification message={errorMessage}/>\n      <h2>Add a New Person to the Phonebook</h2>\n      \n\n      <PersonForm \n        handleSubmit={addPerson}\n        nameInput={newName}\n        onNameChange={handleNameChange}\n        numberInput={newNumber}\n        onNumberChange={handleNumberChange}\n      />\n\n      <h2>Numbers</h2>\n      <ul>\n        {\n          persons.map(person => \n            {\n              if(person.name.toLowerCase().includes(newFilter.toLowerCase())){\n                return (\n                  <Person \n                    key={person.id} \n                    person={person} \n                    handleClick={() => handlePersonClick(person)}/>  \n                )}\n                \n              return null;\n              }\n        )}\n      </ul>\n    </div>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}